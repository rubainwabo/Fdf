#include "cube.h"

void	multiplyMatrixVector(vec3d *i, vec3d *o, mat4x4 *m)
{
	o.x = i.x * m.m[0][0] + i.y * m.m[1][0] + i.z * m[2][0] + m.m[3][0];
	o.y = i.x * m.m[0][1] + i.y * m.m[1][1] + i.z * m[2][1] + m.m[3][1];
	o.z = i.x * m.m[0][2] + i.y * m.m[1][2] + i.z * m[2][2] + m.m[3][2];
	float w = i.x * m.m[0][3] + i.y * m.m[1][3] + i.z * m[2][3] + m.m[3][3];

	if (w != 0.0f)
		o.x /= w; o.y /= w; o.z /= w;
}
int		main(void)
{
	triangle meshCube[12] = 
	{
		//SOUTH
		{0.0f, 0.0f, 0.0f,   0.0f, 1.0f, 0.0f,   1.0f, 1.0f, 0.0f},
		{0.0f, 0.0f, 0.0f,   1.0f, 1.0f, 0.0f,   1.0f, 0.0f, 0.0f},

		//EAST
		{1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 0.0f,   1.0f, 1.0f, 1.0f},
		{1.0f, 0.0f, 1.0f,   0.0f, 1.0f, 1.0f,   1.0f, 0.0f, 1.0f},

		//NORTH
		{1.0f, 0.0f, 1.0f,   1.0f, 1.0f, 1.0f,   0.0f, 1.0f, 1.0f},
		{1.0f, 0.0f, 1.0f,   0.0f, 1.0f, 1.0f,   0.0f, 0.0f, 1.0f},

		//WEST
		{0.0f, 0.0f, 1.0f,   0.0f, 1.0f, 1.0f,   0.0f, 1.0f, 0.0f},
		{0.0f, 0.0f, 1.0f,   0.0f, 1.0f, 0.0f,   0.0f, 0.0f, 0.0f},

		//TOP
		{0.0f, 1.0f, 0.0f,   0.0f, 1.0f, 1.0f,   1.0f, 1.0f, 1.0f},
		{0.0f, 1.0f, 0.0f,   1.0f, 1.0f, 1.0f,   1.0f, 1.0f, 0.0f},

		//BOTTOM
		{1.0f, 0.0f, 1.0f,   0.0f, 0.0f, 1.0f,   0.0f, 0.0f, 0.0f},
		{1.0f, 0.0f, 1.0f,   0.0f, 1.0f, 0.0f,   1.0f, 0.0f, 0.0f},
	};
	int		i;

	i = 0;
	while (i < 12)
	{
		triangle triProjected;
		multiplyMatrixVector(meshCube[i][0], triProjected.P[0], matProj)
		multiplyMatrixVector(meshCube[i][0], triProjected.P[0], matProj)
		multiplyMatrixVector(meshCube[i][0], triProjected.P[0], matProj)
	}
	return (0);
}